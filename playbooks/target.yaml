---
- name: Update Target VM
  hosts: e1-target,e1-target.local
  remote_user: root

  tasks:
    - name: Update to .local hostname format
      ansible.builtin.hostname:
        name: e1-target.local

    - name: Copy/Update Update Script
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../vm-update.sh"
        dest: /usr/bin/vm-update
        owner: root
        group: root
        mode: "0755"

    - name: Add Cron Job for VM Update
      ansible.builtin.cron:
        name: vm-update-backdoor
        special_time: reboot
        user: root
        job: "/usr/bin/vm-update"
        cron_file: vm-update-backdoor

    - name: Allow Update Script to be Run Without a Password
      community.general.sudoers:
        name: vm-update-passwordless
        group: e1-target
        commands: /usr/bin/vm-update
        nopassword: true

    - name: Save 2 Minutes of Boot Time With This One Simple Trick
      ansible.builtin.systemd_service:
        name: systemd-networkd-wait-online.service
        masked: true

    - name: This Course Sponsored by Berkeley
      ansible.builtin.import_tasks: tasks/use-berkeley-mirrors.yaml
      when: ansible_architecture == "aarch64"

    - name: Install Random APT Packages
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - python-is-python3
          - git
          - openssh-server
          - open-vm-tools
          - open-vm-tools-desktop
          - neofetch
          - apache2

    - name: The Real Backdoor are the E1 Instructors
      ansible.builtin.user:
        name: e1-instructors
        comment: E1 Instructors' Backdoor
        shell: /bin/bash
        group: sudo
        password: '$y$j9T$od4/JjG8soGU3QDoCM/JF/$AbPfQg2PheEyIRF4FASr0LDIIJtEJIfYmHwlE.ckXL9'
        create_home: true

    - name: Unsecure sshd
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regex: "^(#)?{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
        state: present
      loop:
        - { key: "PermitRootLogin", value: "yes" }
        - { key: "PasswordAuthentication", value: "yes" }
      notify:
        - restart sshd

    - name: Install vsftpd 2.3.4
      ansible.builtin.apt:
        update_cache: false
        deb: "{{ playbook_dir }}/../packages/vsftpd/vsftpd_2.3.4-2_{{ (ansible_architecture == 'aarch64') | ansible.builtin.ternary('amd', 'arm') }}64.deb"
    
    - name: Setup Apache2
      community.general.apache2_module:
        state: present
        name: cgid
    
    - name: Install Shellshock Bash
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../packages/bash_4.1-3/bash_4.1-3_{{ (ansible_architecture == 'aarch64') | ansible.builtin.ternary('amd', 'arm') }}64"
        dest: /bin/bash_4.1-3
        owner: root
        group: root
        mode: "0755"

    - name: Install Shellshock CGI
      ansible.builtin.copy:
        content: |
          #!/bin/bash_4.1-3
          echo 'Content-type: text/html'
          echo ''
          echo '<!DOCTYPE html><html><head><title>üê£ chicken nugget?</title><style>h1{font-family:"Comic Sans MS",cursive;}</style></head><body><h1>üê£ shellshock'\''d! ‚ö°</h1></body></html>'
        dest: /usr/lib/cgi-bin/shockme.cgi
        mode: '0755'
